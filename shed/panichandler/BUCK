load("@fbcode_macros//build_defs:rust_binary.bzl", "rust_binary")
load("@fbcode_macros//build_defs:rust_library.bzl", "rust_library")
load("@fbcode_macros//build_defs:rust_unittest.bzl", "rust_unittest")
load("@fbsource//tools/build_defs:glob_defs.bzl", "glob")

oncall("autocargo")

rust_library(
    name = "panichandler",
    srcs = glob(["src/*.rs"]),
    autocargo = {
        "cargo_toml_config": {
            "package": {
                "description": "Makes it easier to define a handler for panics",
            },
        },
    },
    os_deps = [
        (
            "linux",
            [
                "fbsource//third-party/rust:libc",
            ],
        ),
        (
            "macos",
            [
                "fbsource//third-party/rust:libc",
            ],
        ),
    ],
    tests = [
        ":panichandler_tests",
    ],
    unittests = False,
    deps = [
        "fbsource//third-party/rust:backtrace",
    ],
)

rust_binary(
    name = "test",
    srcs = [
        "test/test.rs",
    ],
    unittests = False,
    deps = [
        ":panichandler",
    ],
)

rust_binary(
    name = "test_deep",
    srcs = [
        "test/test_deep.rs",
    ],
    unittests = False,
    deps = [
        ":panichandler",
    ],
)

rust_binary(
    name = "testmultithread",
    srcs = [
        "test/testmultithread.rs",
    ],
    unittests = False,
    deps = [
        ":panichandler",
    ],
)

rust_binary(
    name = "testmultithread_abort",
    srcs = [
        "test/testmultithread_abort.rs",
    ],
    os_deps = [
        (
            "linux",
            [
                "fbsource//third-party/rust:libc",
            ],
        ),
        (
            "macos",
            [
                "fbsource//third-party/rust:libc",
            ],
        ),
    ],
    unittests = False,
    deps = [
        ":panichandler",
    ],
)

rust_unittest(
    name = "panichandler_tests",
    srcs = [
        "test/testrunner.rs",
    ],
    # * fbcode_build builds use buck resources to get the binary names.
    # * Cargo builds use Cargo to get the binary names.
    # * non-fbcode_build builds (aka //mode/dev-rust-oss) can't do either,
    #   so ignore it.
    allow_oss_build = False,
    crate_root = "test/testrunner.rs",
    resources = {
        "test": "//common/rust/shed/panichandler:test",
        "test_deep": "//common/rust/shed/panichandler:test_deep",
        "testmultithread": "//common/rust/shed/panichandler:testmultithread",
        "testmultithread_abort": "//common/rust/shed/panichandler:testmultithread_abort",
    },
    deps = [
        "fbsource//third-party/rust:anyhow",
        "fbsource//third-party/rust:assert_cmd",
        "fbsource//third-party/rust:predicates",
        "//common/rust/buck_resources:buck_resources",
    ],
)
